name: Deploy Next.js to JD Cloud

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      version: ${{ steps.version.outputs.version }}
      commit_message: ${{ steps.version.outputs.commit_message }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Extract version information
        id: version
        run: |
          VERSION="$(echo ${{ github.sha }} | cut -c1-7)"
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "commit_message=$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "📦 Version: $VERSION"
          echo "💬 Commit: $COMMIT_MSG"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short
          labels: |
            org.opencontainers.image.title=DocFlow
            org.opencontainers.image.description=Modern collaborative document editing platform
            org.opencontainers.image.vendor=DocFlow Team
            org.opencontainers.image.version=${{ steps.version.outputs.version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            VERSION=${{ steps.version.outputs.version }}
            GIT_COMMIT=${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.2.1
        env:
          VERSION: ${{ needs.build-and-push.outputs.version }}
          COMMIT_MSG: ${{ needs.build-and-push.outputs.commit_message }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SERVER_PORT }}
          password: ${{ secrets.SERVER_PASSWORD }}
          envs: VERSION,COMMIT_MSG,GITHUB_TOKEN,GITHUB_ACTOR,GITHUB_REPOSITORY,GITHUB_SHA
          script: |
            # 设置变量（将仓库名转换为小写）
            IMAGE_NAME="ghcr.io/$(echo ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]'):latest"
            CONTAINER_NAME="docflow"
            PROJECT_DIR="/home/DocFlow"
            DEPLOY_LOG="$PROJECT_DIR/deploy.log"

            # 创建项目目录
            mkdir -p $PROJECT_DIR
            cd $PROJECT_DIR

            # 记录部署信息
            echo "=====================================" >> $DEPLOY_LOG
            echo "🚀 Deployment at: $(date '+%Y-%m-%d %H:%M:%S')" >> $DEPLOY_LOG
            echo "📦 Version: $VERSION" >> $DEPLOY_LOG
            echo "💬 Commit: $COMMIT_MSG" >> $DEPLOY_LOG
            echo "👤 By: $GITHUB_ACTOR" >> $DEPLOY_LOG
            echo "=====================================" >> $DEPLOY_LOG

            # 登录 GitHub Container Registry
            echo "🔐 Logging into GHCR..."
            echo "$GITHUB_TOKEN" | docker login ghcr.io -u "$GITHUB_ACTOR" --password-stdin

            # 拉取最新镜像
            echo "📦 Pulling latest image..."
            docker pull $IMAGE_NAME

            # 停止并删除旧容器
            echo "🛑 Stopping old container..."
            docker stop $CONTAINER_NAME 2>/dev/null || true
            docker rm $CONTAINER_NAME 2>/dev/null || true

            # 清理悬空镜像
            echo "🧹 Cleaning up..."
            docker image prune -f

            # 运行新容器
            echo "🚀 Starting new container..."
            docker run -d \
              --name $CONTAINER_NAME \
              --restart unless-stopped \
              -p 3000:3000 \
              -e NODE_ENV=production \
              -e NEXT_TELEMETRY_DISABLED=1 \
              -e APP_VERSION="$VERSION" \
              -e GIT_COMMIT="$GITHUB_SHA" \
              -e DEPLOYED_BY="$GITHUB_ACTOR" \
              -e DEPLOYED_AT="$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
              $IMAGE_NAME

            # 等待容器启动
            echo "⏳ Waiting for container..."
            sleep 10

            # 检查容器状态
            if docker ps | grep -q $CONTAINER_NAME; then
              echo "✅ Container started successfully!"
              docker logs --tail 20 $CONTAINER_NAME
              echo "✅ Deployment completed!" >> $DEPLOY_LOG
            else
              echo "❌ Container failed to start!"
              echo "❌ Deployment failed!" >> $DEPLOY_LOG
              docker logs $CONTAINER_NAME
              exit 1
            fi

            # 登出
            docker logout ghcr.io

      - name: Create deployment summary
        if: always()
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Item | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| 📦 Version | \`${{ needs.build-and-push.outputs.version }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| 💬 Commit | ${{ needs.build-and-push.outputs.commit_message }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 👤 Deployed by | @${{ github.actor }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🕐 Time | $(date -u '+%Y-%m-%d %H:%M:%S UTC') |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔗 Commit | [\`${{ github.sha }}\`](${{ github.event.repository.html_url }}/commit/${{ github.sha }}) |" >> $GITHUB_STEP_SUMMARY
          echo "| 🐳 Registry | [GHCR](https://github.com/${{ github.repository }}/pkgs/container/docflow) |" >> $GITHUB_STEP_SUMMARY
